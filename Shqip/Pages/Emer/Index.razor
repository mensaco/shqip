@page "/emrat"

<h3>Emrat</h3>

@if (Emrat == null)
{
    <span>Loading...</span>
}
else
{
    <div class="row">
        <div class="@Globals.Col3_12">
            <div class="form-inline">
                <label>Filter:</label>
                <input type="text" class="form-control" @bind="@Filter" />
            </div>
        </div>
        <div class="@Globals.Col3_12">
            <div class="form-inline">
                <label>Sort:</label>
                <input type="text" class="form-control" @bind="@SortOrder" />
            </div>
        </div>
        <div class="@Globals.Col3_12">
            <div class="form-inline">
                <label>Page Size:</label>
                <select class="form-control" @bind="@PageSize">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                </select>
            </div>
        </div>
        <div class="@Globals.Col3_12">
            <button @onclick="@GetPageFiltered">Go</button>
        </div>


    </div>

    @if (Emrat.Count >= 0 && TotalItems > 0)
    {
        <div>@Emrat.Count of @TotalItems items returned.</div>
    }

    <div class="row mt-3">
        <div class="@Globals.Col3_12">
            <a href="/krijoemer" class="btn btn-outline-success">Regjistro një em&euml;r t&euml; ri</a>
        </div>
    </div>
    @if (TotalPages > 0 && 0 <= PageIndex && PageIndex < TotalPages)
    {
        var firstPage = PageIndex - TotalPages % 5;
        var lastPage = firstPage + 4;

        if(lastPage > TotalPages - 1)
        {
            lastPage = TotalPages - 1;
        }


        <nav class="mt-3" aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="javascript:void(0);" @onclick="@(async () => { PageIndex = ((PageIndex > 0) ? PageIndex-1: 0); await GetPageFiltered(); } )">Previous</a></li>

                @for (var p = firstPage; p < lastPage + 1; p++)
                {
                    var q = p; ;


                    <li class="page-item @((q == PageIndex)?"active":"")"><a class="page-link" href="javascript:void(0);" @onclick="@(async () => { PageIndex = q; await GetPageFiltered(); } )">@(q+1)</a></li>

                }


                <li class="page-item"><a class="page-link" href="javascript:void(0);" @onclick="@(async () => { PageIndex = ((PageIndex < TotalPages - 1) ? PageIndex+1: TotalPages -1 ); } )">Next</a></li>

            </ul>
        </nav>
    }

    <div class="row mt-3">
        <div class="col-md-3 col-sm-12">

            <ul class="list-group">

                @for (int i = 0; i < Emrat.Count; i++)
                {
                    var q = i;
                    var active = EmriIZgjedhur == Emrat[q];

                    <li @onclick="@(()=>EmriIZgjedhur = Emrat[q])" class="hover @Globals.ListJustified @((active)?" active":"")">
                        @*<a class="btn btn-link @((active)?" text-white":"")" href="javascript:void(0);" >@Emrat[q].NjejesiPashquar, @Emrat[q].NjejesiShquar, @Emrat[q].ShumesiShquar</a>*@

                        <span class="@((active)?" text-white":"")">
                            @Emrat[q].NjejesiPashquar, @Emrat[q].NjejesiShquar, @Emrat[q].ShumesiShquar
                        </span>

                    </li>


                }
            </ul>
        </div>
        @if (EmriIZgjedhur != null)
        {
            <div class="col-md-3 col-sm-12">

                @{
                    var p = EmriIZgjedhur.Pershkrimet.Split(Globals.Separator);
                }
                <ul class="list-group">

                    <ListItemJustified Left="Trajta e pa shquar" Right="@EmriIZgjedhur.NjejesiPashquar" />
                    <ListItemJustified Left="Trajta e shquar" Right="@EmriIZgjedhur.NjejesiShquar" />
                    <ListItemJustified Left="Gjinia" Right="@EmriIZgjedhur.Gjinia.ToString()" />
                    <ListItemJustified Left="Shumësi" Right="@EmriIZgjedhur.ShumesiShquar" />
                    <li class="list-group-item">
                        <label>P&euml;rshkrimet</label>
                        <div>

                            @for (int j = 0; j < p.Length; j++)
                            {
                                <ol class="list-group small">
                                    <li class="list-group-horizontal ml-3">
                                        @p[j]
                                    </li>
                                </ol>
                            }
                        </div>

                    </li>


                </ul>





            </div>

            <div class="col-md-3 col-sm-12">


                <ul class="list-group">


                    <li class="list-group-item">
                        <label>Lakimi (trajta e pa shquar)</label>
                        <div>
                            <table class="table table-sm table-borderless small">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Njëjës</th>
                                        <th>Shumës</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th>Emrore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesPashquar.Emerore</td>
                                        <td>@EmriIZgjedhur.RasatShumesPashquar.Emerore</td>
                                    </tr>
                                    <tr>
                                        <th>Gjinore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesPashquar.Gjinore</td>
                                        <td>@EmriIZgjedhur.RasatShumesPashquar.Gjinore</td>
                                    </tr>
                                    <tr>
                                        <th>Dhanore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesPashquar.Dhanore</td>
                                        <td>@EmriIZgjedhur.RasatShumesPashquar.Dhanore</td>
                                    </tr>
                                    <tr>
                                        <th>Kallzore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesPashquar.Kallzore</td>
                                        <td>@EmriIZgjedhur.RasatShumesPashquar.Kallzore</td>
                                    </tr>
                                    <tr>
                                        <th>Rrjedhore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesPashquar.Rrjedhore</td>
                                        <td>@EmriIZgjedhur.RasatShumesPashquar.Rrjedhore</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </li>


                </ul>





            </div>

            <div class="col-md-3 col-sm-12">


                <ul class="list-group">


                    <li class="list-group-item">
                        <label>Lakimi (trajta e shquar)</label>
                        <div>
                            <table class="table table-sm table-borderless small">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Njëjës</th>
                                        <th>Shumës</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th>Emrore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesShquar.Emerore</td>
                                        <td>@EmriIZgjedhur.RasatShumesShquar.Emerore</td>
                                    </tr>
                                    <tr>
                                        <th>Gjinore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesShquar.Gjinore</td>
                                        <td>@EmriIZgjedhur.RasatShumesShquar.Gjinore</td>
                                    </tr>
                                    <tr>
                                        <th>Dhanore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesShquar.Dhanore</td>
                                        <td>@EmriIZgjedhur.RasatShumesShquar.Dhanore</td>
                                    </tr>
                                    <tr>
                                        <th>Kallzore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesShquar.Kallzore</td>
                                        <td>@EmriIZgjedhur.RasatShumesShquar.Kallzore</td>
                                    </tr>
                                    <tr>
                                        <th>Rrjedhore:</th>
                                        <td>@EmriIZgjedhur.RasatNjejesShquar.Rrjedhore</td>
                                        <td>@EmriIZgjedhur.RasatShumesShquar.Rrjedhore</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </li>


                </ul>





            </div>

        }

    </div>


}


@using Model

@inject HttpClient Http
@inject NavigationManager  NavigationManager
@inject IJSRuntime JS

@attribute [Authorize]

@code {

    public List<Emer> Emrat { get; set; }

    private Emer EmriIZgjedhur { get; set; }

    private int PageSize { get; set; } = 10;
    private int PageIndex { get; set; } = 0;

    private int TotalPages { get; set; } = 0;

    private string Filter { get; set; } = "";
    private string SortOrder { get; set; } = "";

    private int TotalItems { get; set; }



    protected async override Task OnInitializedAsync()
    {

        await GetPageFiltered();

    }

    private async Task GetPageFiltered()
    {
        var token = await JS.GetFromLocalStorage(Shqip.Auth.JWTAuthenticationProvider.TOKENKEY);

        if (Http.BaseAddress == null)
        {
            Http.BaseAddress = new Uri(NavigationManager.BaseUri);
        }

        Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("bearer", token);

        //var r = await Http.GetAsync("api/Emrat");


        var r = await Http.GetAsync($"api/Emrat/paged?pageSize={PageSize}&PageIndex={PageIndex}&filter={Filter}&sortOrder={SortOrder}");

        IEnumerable<string> headerValues = r.Headers.GetValues("TotalItems");
        var ti = headerValues.FirstOrDefault();

        if (!string.IsNullOrEmpty(ti))
        {
            TotalItems = int.Parse(ti);
        }

        var json = (await r.Content.ReadAsStringAsync());
        Emrat = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Model.Emer>>(json);

        TotalPages = TotalItems / PageSize;
    }

}
